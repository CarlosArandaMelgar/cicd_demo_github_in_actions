# This workflow is used for deploying the application to different environments using AWS ECS.

name: Deployment Workflow template

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: 'dev'
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

# Define environment variables used in the workflow.
env:
    ENVIRONMENT: ${{ inputs.environment }}
    APP_PREFIX: demo-${{ inputs.environment }}
    ECS_CLUSTER_NAME: cloudnativesv-demo-${{ inputs.environment }}
    NODE_VERSION: 21.x

# Define the jobs in the workflow.
jobs: 
    # Job for building and pushing the Docker image.
    build_and_push:
      name: Build and Push to ECR
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: read
      outputs:
        image_tag: ${{ steps.tag.outputs.image_tag }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4 # https://github.com/actions/checkout

        # - name: Use Node.js $NODE_VERSION
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: $NODE_VERSION

        - name: Setup QEMU
          uses: docker/setup-qemu-action@v3 # https://github.com/docker/setup-qemu-action
  
        - name: Setup Docker buildx
          uses: docker/setup-buildx-action@v3 # https://github.com/docker/setup-buildx-action
  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4 # https://github.com/aws-actions/configure-aws-credentials
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
  
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2 # https://github.com/aws-actions/amazon-ecr-login
  
        - name: Create Docker Image Tag
          id: tag
          run: echo "image_tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
    
        - name: Get ECR Registry URI
          run: ./.github/scripts/get_ecr_registry_uri.sh

        - name: Build and push
          env:
            REPO_NAME: ${{ env.APP_PREFIX }}
          uses: docker/build-push-action@v6 # https://github.com/docker/build-push-action
          with:
            context: .
            file: ./Dockerfile
            no-cache: true
            push: true
            attests: type=sbom
            platforms: linux/arm64
            tags: ${{ env.ECR_REGISTRY }}/${{ env.REPO_NAME }}:${{ steps.tag.outputs.image_tag }}
  
    # Job for deploying to the ECS service.
    deploy:
      needs: build_and_push
      name: Deploy
      runs-on: ubuntu-latest
      env:
        IMAGE_TAG: ${{ needs.build_and_push.outputs.image_tag }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4 # https://github.com/actions/checkout
  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4 # https://github.com/aws-actions/configure-aws-credentials
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
  
        - name: Get the latest revision of the task definition
          id: task-def-download
          env:
            ECS_TASK_FAMILY: ${{ env.APP_PREFIX }}
          run: ./.github/scripts/get_task_definition.sh
  
        - name: Get ECR Registry URI
          run: ./.github/scripts/get_ecr_registry_uri.sh
  
        - name: Render the Amazon ECS task definition
          id: task-def
          env:
            CONTAINER_NAME: ${{ env.APP_PREFIX }}
            IMAGE: "${{ env.ECR_REGISTRY }}/${{ env.APP_PREFIX }}:${{ env.IMAGE_TAG }}"
          uses: aws-actions/amazon-ecs-render-task-definition@v1 # https://github.com/aws-actions/amazon-ecs-render-task-definition
          with:
            task-definition: ${{ steps.task-def-download.outputs.file }}
            container-name: ${{ env.CONTAINER_NAME }}
            image: ${{ env.IMAGE }}
            environment-variables: "DOCKER_IMAGE_TAG=${{ env.IMAGE_TAG }}"

        - name: Deploy to the ECS service with updated task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v2 # https://github.com/aws-actions/amazon-ecs-deploy-task-definition
          with:
            task-definition: ${{ steps.task-def.outputs.task-definition }}
            service: ${{ env.APP_PREFIX }}
            cluster: ${{ env.ECS_CLUSTER_NAME }}
            wait-for-service-stability: true
